// Code generated by goa v3.8.4, DO NOT EDIT.
//
// ProgLog client
//
// Command:
// $ goa gen github.com/ikawaha/proglog/design

package proglog

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "ProgLog" service client.
type Client struct {
	ProcedureEndpoint       goa.Endpoint
	ConsumeEndpoint         goa.Endpoint
	ProcedureStreamEndpoint goa.Endpoint
	ConsumeStreamEndpoint   goa.Endpoint
}

// NewClient initializes a "ProgLog" service client given the endpoints.
func NewClient(procedure, consume, procedureStream, consumeStream goa.Endpoint) *Client {
	return &Client{
		ProcedureEndpoint:       procedure,
		ConsumeEndpoint:         consume,
		ProcedureStreamEndpoint: procedureStream,
		ConsumeStreamEndpoint:   consumeStream,
	}
}

// Procedure calls the "Procedure" endpoint of the "ProgLog" service.
func (c *Client) Procedure(ctx context.Context, p *ProduceRequest) (res *Produceresponse, err error) {
	var ires interface{}
	ires, err = c.ProcedureEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Produceresponse), nil
}

// Consume calls the "Consume" endpoint of the "ProgLog" service.
func (c *Client) Consume(ctx context.Context, p *ConsumeRequest) (res *Consumeresponse, err error) {
	var ires interface{}
	ires, err = c.ConsumeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Consumeresponse), nil
}

// ProcedureStream calls the "ProcedureStream" endpoint of the "ProgLog"
// service.
func (c *Client) ProcedureStream(ctx context.Context) (res ProcedureStreamClientStream, err error) {
	var ires interface{}
	ires, err = c.ProcedureStreamEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ProcedureStreamClientStream), nil
}

// ConsumeStream calls the "ConsumeStream" endpoint of the "ProgLog" service.
func (c *Client) ConsumeStream(ctx context.Context) (res ConsumeStreamClientStream, err error) {
	var ires interface{}
	ires, err = c.ConsumeStreamEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(ConsumeStreamClientStream), nil
}
